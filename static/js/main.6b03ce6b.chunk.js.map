{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","porps","style","overflowY","height","border","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","this","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZJ,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAOC,EAAc,EAAdA,MAAQC,EAAM,EAANA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCOLK,EAbA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,8BACCA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAQ,cAAC,EAAD,CACHR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHHS,SCQhBC,EAbC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,gCACVW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCGPI,EAVF,SAACC,GAEV,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAWC,OAAO,QAAUC,OAAO,mBAA1D,SACKJ,EAAMK,YC4CJC,G,wDA3CX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAM,CACPxB,OAAO,GACPqB,YAAY,IAJP,E,qDASb,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAxB,GAAI,OAAE,EAAKkB,SAAS,CAACpB,OAAOE,S,oBAOtC,WAAS,IAAD,EACyB2B,KAAKL,MAA3BH,EADH,EACGA,YAAarB,EADhB,EACgBA,OACd8B,EAAe9B,EAAO+B,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,oBAAoBC,SAASb,EAAYY,wBAE/D,OAAIjC,EAAOmC,OAKH,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ8B,SARvB,oBAAIlC,UAAU,KAAd,yB,GA1BDwC,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.6b03ce6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name , email , id})=>{\r\n    \r\n    return(\r\n        <div className='bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5 tc'>\r\n            <img src={`https://robohash.org/${id}?200*200` }alt=\"Robot\" />\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n    return(\r\n        <div>\r\n        {robots.map((user,i)=>{\r\n            return (<Card key={i}\r\n                 id={robots[i].id}\r\n                 name={robots[i].name}\r\n                 email={robots[i].email} />)\r\n         })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchField,searchChange})=>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-light-blue'\r\n            type=\"search\"\r\n            placeholder=\"search robot\"\r\n            onChange={searchChange}\r\n             />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(porps)=>{\r\n\r\n    return (\r\n        <div style={{overflowY:'scroll' , height:'800px' , border:'5px solid black' , }}>\r\n            {porps.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React ,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(user=>this.setState({robots:user}));\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({ searchfield :event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const {searchfield ,robots }=this.state\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\r\n        })\r\n        if(!robots.length){\r\n            return <h1 className='tc'>Loading</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f2'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                    \r\n                </div>   \r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}